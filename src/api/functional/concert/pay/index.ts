/**
 * @packageDocumentation
 * @module api.functional.concert.pay
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { PayConcertReqBodyDto } from "../../../../concert/dto/pay-concert.dto";

/**
 * 콘서트 결제하기
 *
 * @param concertId
 * @param body 결제 정보
 * @throws 400 잘못 된 요청
 * @throws 401 Bad Request
 *
 * @controller ConcertController.payConcert
 * @path PATCH /concert/:concertId/pay
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function payConcert(
  connection: IConnection,
  concertId: number,
  body: payConcert.Input,
): Promise<void> {
  return PlainFetcher.fetch(
    {
      ...connection,
      headers: {
        ...connection.headers,
        "Content-Type": "application/json",
      },
    },
    {
      ...payConcert.METADATA,
      path: payConcert.path(concertId),
    },
    body,
  );
}
export namespace payConcert {
  export type Input = Primitive<PayConcertReqBodyDto>;

  export const METADATA = {
    method: "PATCH",
    path: "/concert/:concertId/pay",
    request: {
      type: "application/json",
      encrypted: false,
    },
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (concertId: number) =>
    `/concert/${encodeURIComponent(concertId ?? "null")}/pay`;
}
