/**
 * @packageDocumentation
 * @module api.functional.concert.available_date
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from "@nestia/fetcher";
import { PlainFetcher } from "@nestia/fetcher/lib/PlainFetcher";

import type { GetAvailableDateResDto } from "../../../../concert/dto/get-available-date.dto";

/**
 *
 * @description 콘서트 예약 가능한 날짜 조회
 * @param concertId
 * @throws 400 잘못 된 요청
 * @throws 401 Bad Request
 *
 * @controller ConcertController.getAvailableDate
 * @path GET /concert/:concertId/available-date
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAvailableDate(
  connection: IConnection,
  concertId: number,
): Promise<getAvailableDate.Output> {
  return PlainFetcher.fetch(connection, {
    ...getAvailableDate.METADATA,
    path: getAvailableDate.path(concertId),
  });
}
export namespace getAvailableDate {
  export type Output = Primitive<GetAvailableDateResDto>;

  export const METADATA = {
    method: "GET",
    path: "/concert/:concertId/available-date",
    request: null,
    response: {
      type: "application/json",
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (concertId: number) =>
    `/concert/${encodeURIComponent(concertId ?? "null")}/available-date`;
}
