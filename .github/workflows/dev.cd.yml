name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: create env
        run: |

          echo "${{secrets.dev_ENV}}" >> .dev.env

      - name: Delete ECR images
        run: |
          for repo in $(aws ecr describe-repositories --query 'repositories[].repositoryName' --output text); do
            for tag in $(aws ecr list-images --repository-name $repo --query 'imageIds[].imageTag' --output text); do
              aws ecr batch-delete-image --repository-name $repo --image-ids imageTag=$tag;
            done;
          done;

      - name: Build, tag, and push the image(node.js) to Amazon ECR
        id: build-image-node
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          IMAGE_TAG_NODE: concert

        run: |
          ${{secrets.AWS_DOCKER_LOGIN_CONSOLE}}
          npm install @nestjs/common
          npm run build

          docker build -f dev.dockerfile -t ${{secrets.ECR_REGISTRY}}/concert:dev .
          docker push ${{secrets.ECR_REGISTRY}}/concert:dev

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: Deploy
        uses: appleboy/ssh-action@master

        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: 22

          script: |
            ${{secrets.AWS_DOCKER_LOGIN_CONSOLE}}

            CONTAINER_ID=$(docker ps -q -f "expose=3000")
            if [ ! -z "$CONTAINER_ID" ]
            then
              docker rm -f $CONTAINER_ID
            fi

            IMAGE_ID=$(docker images -q)
            if [ ! -z "$IMAGE_ID" ]
            then
              docker rmi -f $IMAGE_ID
            fi
            docker pull ${{secrets.ECR_REGISTRY}}/concert:dev


            docker run -d -it --restart unless-stopped -p 3000:3000 ${{secrets.ECR_REGISTRY}}/concert:dev

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
