/**
 * @packageDocumentation
 * @module api.functional.cash
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

import type { GetCashResDto } from '../../../src/cash/dto/getCash.dto';

export * as charge from './charge';

/**
 * 유저가 가진 캐시 조회하기
 *
 * @tag Cash
 * @description 대기열 토큰이 필요하지 않음.
 * @param userId
 * @throws 404 유저를 찾을 수 없음
 *
 * @controller CashController.getCash
 * @path GET /cash/:userId
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getCash(
  connection: IConnection,
  userId: number,
): Promise<getCash.Output> {
  return PlainFetcher.fetch(connection, {
    ...getCash.METADATA,
    path: getCash.path(userId),
  });
}
export namespace getCash {
  export type Output = Primitive<GetCashResDto>;

  export const METADATA = {
    method: 'GET',
    path: '/cash/:userId',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (userId: number) =>
    `/cash/${encodeURIComponent(userId ?? 'null')}`;
}
