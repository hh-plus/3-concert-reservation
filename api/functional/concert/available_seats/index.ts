/**
 * @packageDocumentation
 * @module api.functional.concert.available_seats
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
//================================================================
import type { IConnection, Primitive } from '@nestia/fetcher';
import { PlainFetcher } from '@nestia/fetcher/lib/PlainFetcher';

import type { GetAvailableSeatsResDto } from '../../../../src/concert/controllers/dto/get-available-seats.dto';

/**
 *
 * @description 콘서트 예약 가능한 좌석 조회
 * @param concertId
 * @throws 400 잘못 된 요청
 * @throws 401 Bad Request
 * @returns
 *
 * @controller ConcertController.getAvailableSeats
 * @path GET /concert/:concertId/available-seats
 * @nestia Generated by Nestia - https://github.com/samchon/nestia
 */
export async function getAvailableSeats(
  connection: IConnection,
  concertId: number,
): Promise<getAvailableSeats.Output> {
  return PlainFetcher.fetch(connection, {
    ...getAvailableSeats.METADATA,
    path: getAvailableSeats.path(concertId),
  });
}
export namespace getAvailableSeats {
  export type Output = Primitive<GetAvailableSeatsResDto>;

  export const METADATA = {
    method: 'GET',
    path: '/concert/:concertId/available-seats',
    request: null,
    response: {
      type: 'application/json',
      encrypted: false,
    },
    status: null,
  } as const;

  export const path = (concertId: number) =>
    `/concert/${encodeURIComponent(concertId ?? 'null')}/available-seats`;
}
